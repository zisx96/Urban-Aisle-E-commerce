package com.urbanaisle.store.entities;

import java.math.BigDecimal;
import java.util.UUID;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name= "products")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Product {
	
	@Column
	@GeneratedValue
	private UUID ID;
	
	@Column(nullable = false)
	private String name;
	
	@Column
	private String description;
	
	@Column(nullable = false)
	private BigDecimal price;
	
	@Column(nullable = false)
	private String brand;
	
	@Column
	private Float rating;
	
	@Column(nullable = false)
	private boolean isNewArrival;
	
	@Column(nullable = false,unique = true)
    private String slug;
	
	@Column(nullable = false, updatable = false)
	@Temporal(TemporalType.TIMESTAMP)
	private java.util.Date createdAt;
	
	@Column(nullable = false)
	@Temporal(TemporalType.TIMESTAMP)
	private java.util.Date updatedAt;
	
	 @OneToMany(mappedBy = "product",cascade = CascadeType.ALL)
	    private List<ProductVariant> productVariants;

	    @ManyToOne(fetch = FetchType.LAZY)
	    @JoinColumn(name = "category_id",nullable = false)
	    @JsonIgnore
	    private Category category;

	    @ManyToOne(fetch = FetchType.LAZY)
	    @JoinColumn(name = "categoryType_id",nullable = false)
	    @JsonIgnore
	    private CategoryType categoryType;

	    @OneToMany(mappedBy = "product", cascade = CascadeType.ALL)
	    private List<Resources> resources;

	    @PrePersist
	    protected void onCreate() {
	        createdAt = new java.util.Date();
	        updatedAt = createdAt;
	    }

	    @PreUpdate
	    protected void onUpdate() {
	        updatedAt = new java.util.Date();
	    }
	
}
